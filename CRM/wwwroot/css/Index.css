.tasks-container {
    display: flex;
    --calendar-color: #F0F2EF;
    background-color: var(--color-accent);
    height: 80vh;
}

.tasks-container > * {
    flex: 1;
}

.tasks-spikes {
    flex: 0 0 30px;
    overflow: hidden;
    position: relative;
}

.tasks-spikes::before {
    content: '';
    position: absolute;
    z-index: 3;
    pointer-events: none;
    background-repeat: no-repeat;
    bottom: -0.1vw;
    left: -0.1vw;
    right: -0.1vw;
    top: -0.1vw;
    background-size: 30px 300%;
    background-position: 0% 0%;
    background-image: url('data:image/svg+xml;charset=utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 11 98" preserveAspectRatio="none"><path d="M1 98l10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1-10-1 10-1L1 8l10-1L1 6l10-1L1 4l10-1L1 2l10-1L1 0H0v98z" fill="%23F2F4F8"/></svg>');
}

.tasks-calendar {
    padding: 50px;
    background-color: var(--color-background);
}

.tasks-calendar-header {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: end;
    margin-bottom: 10px;
}

.tasks-calendar-buttons {
    font-size: 0;
}
.tasks-calendar-buttons * {
    font-size: 1rem;
}
a {
    text-decoration: none;
}
.calendar-title {
    font-weight: 100;
    text-align: center;
    white-space: nowrap;
}
.btn-arrow {
    padding: 3px 10px 5px;
    margin: 0;
    border-radius: 0;
    color: var(--color-accent);
    border-color: var(--color-accent);
}
.btn-arrow:hover {
    background-color: var(--color-accent);
}
.arrow-left {
    border-right: 0;
    border-top-left-radius: 15px;
    border-bottom-left-radius: 15px;
}
.arrow-right {
    border-top-right-radius: 15px;
    border-bottom-right-radius: 15px;
}

.calendar {
    --day-number-size: 1rem;
    --common-margin: 5px;
    --border-color: #d3d3d3;
    border-right: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);
    border-spacing: 0;
    table-layout: fixed;
    width: 100%;
    height: 80%;
}

.calendar td {
    border-top: 1px solid var(--border-color);
    border-left: 1px solid var(--border-color);
    text-align: center;
    background-color: var(--calendar-color);
}

.calendar tbody {
    height: 100%;
}

.calendar > tbody td {
    height: 16.67%;
}

.calendar .different-month {
    opacity: 0.3;
}

.calendar-day {
    width: 100%;
    height: 100%;
    overflow: auto;
}

.calendar td > div > p {
    font-size: var(--day-number-size);
    text-align: right;
    margin-top: var(--common-margin);
    margin-right: var(--common-margin);
}

.todoitems {
    overflow-x: hidden;
    overflow-y: scroll;
    scrollbar-width: none;
    height: calc(100% - var(--common-margin) - var(--day-number-size) - 5px);
    padding: 0 3px;
}

/*Scrollbar style*/
.todoitems {
    --scrollbarBG: transparent;
    --thumbBG: #90a4ae;
    scrollbar-width: thin;
    scrollbar-color: var(--thumbBG) var(--scrollbarBG);
}

.todoitems::-webkit-scrollbar {
    width: 4px;
}

.todoitems::-webkit-scrollbar-track {
    background: var(--scrollbarBG);
}

.todoitems::-webkit-scrollbar-thumb {
    background-color: var(--thumbBG);
    border-radius: 10px;
    border: 3px solid var(--scrollbarBG);
}
/*End scrollbar style*/

.todoitems-item {
    background-color: var(--color-primary);
    margin-bottom: 5px;
    border-radius: 9px;
    padding: 4px 6px;
    text-align: left;
    cursor: pointer;
}

.todoitems-item > * {
    color: white;
}

.todoitems .todoitems-item:first-of-type {
    margin-top: 5px;
}

.todoitems-item-time {
    font-size: 0.8rem;
}

.todoitems-item-text {
    font-size: 0.8rem;
    text-overflow: ellipsis;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
}

.todoitems-item-details {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    max-width: 250px;
    height: auto;
    color: black;
    background-color: white;
    border: 1px solid var(--border-color);
    z-index: 99;
    transition: visibility 0.3s, opacity 0.3s;
    padding: 20px;
}

.todoitems-item-details.show {
    visibility: visible;
    opacity: 1;
}

.todoitems-item-details-header {
    margin-bottom: 5px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.todoitems-item-details-time {
    font-weight: 700;
}

.todoitems-item-details-assignedto {
    margin: 10px 0 0;
}

.c100 span {
    transform: scale(1.5);
}

.tasks-controls {
    padding: 50px;
}
.task-editor-title {
    color: var(--color-background);
    text-align: center;
}
.task-editor-form {
    margin: 30px auto;
    width: 500px;
}
.input-wrapper {
    position: relative;
    display: block;
    width: 100%;
    margin-bottom: 15px;
}
.input-wrapper > *, .time-range > input {
    border-radius: 15px;
}
.input-wrapper * {
    font-size: 2rem;
}
.input-date {
    text-align: center;
    padding: 5px 0;
    margin: 0 auto;
    display: block;
}
.time-range {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
}
.time-range > i {
    color: var(--color-background);
}
.time-range > input {
    padding: 0 10px;
}
.input-text {
    display: block;
    width: 100%;
    resize: none;
    font-size: 1.5rem;
    height: calc(4 * 1.5rem);
    padding: 7px;
}
.select-assigned-person {
    width: 100%;
    display: block;
    padding: 8px;
    color: gray;
}
.select-assigned-person, .select-assigned-person > option {
    font-size: 1.5rem;
}
.input-progress-wrapper {
    width: 100%;
    display: flex;
    justify-content: space-between;
    gap: 1rem;
}
.input-progress {
    width: 80%;
}
.input-progress-value {
    text-align: right;
    width: 20%;
    color: var(--color-background);
}
.task-editor-buttons {
    display: flex;
    gap: 1rem;
}
.task-editor-buttons > button {
    flex: 1;
    font-size: 2rem;
}

.incorrect-input {
    opacity: 0;
    position: absolute;
    left: calc(100% + 10px);
    top: 50%;
    transform: translateY(-50%);
    color: white;
    background-color: red;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    transition: opacity 1s;
}
.incorrect-input.show {
    opacity: 1;
}
.incorrect-input > i {
    font-size: 72%;
    color: white;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -49%);
}